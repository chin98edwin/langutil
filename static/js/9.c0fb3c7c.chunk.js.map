{"version":3,"sources":["~components/one-of/index.js","~components/param-table/header-row.js","~components/param-table/index.js"],"names":["OneOf","values","toRender","i","length","push","key","children","localize","keyword","transform","withProps","params","HeaderRow","overrideVarName","data","ParamTable","trArray","dataIndex","Object","keys","type","oneOf","desc","optional","defaultValue","isOptional","Array","isArray","join"],"mappings":"4GAAA,0CAiBeA,IAZf,YAEE,IAF0B,IAAXC,EAAU,EAAVA,OACXC,EAAW,GACNC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IACjCD,EAASG,KAAK,kBAAC,IAAD,CAAMC,IAAKH,EAAGI,SAAQ,WAAMN,EAAOE,GAAb,QAChCA,EAAIF,EAAOG,OAAS,GAAKF,EAASG,KAAK,kBAAC,WAAD,CAAUC,IAAG,WAAMH,IAAnB,KAA0B,+BAEvE,OAAOK,mBAAS,CACdC,QAAS,gBACTC,UAAWC,YAAU,CAAEC,OAAQV,Q,6FCApBW,EATG,SAAC,GAAkD,IAAD,IAA/CC,uBAA+C,MAA7BN,mBAAS,cAAoB,EAClE,OAAO,kBAAC,IAAD,CAAcO,KAAM,CACzBD,EACAN,mBAAS,QACTA,mBAAS,mBCkCEQ,UArCf,YAIE,IAJmD,IAAD,IAA9BD,YAA8B,MAAvB,GAAuB,EAAnBD,EAAmB,EAAnBA,gBAC3BG,EAAU,GACRC,EAAYC,OAAOC,KAAKL,GAErBZ,EAAI,EAAGA,EAAIe,EAAUd,OAAQD,IAAK,CAAC,IAAD,EACaY,EAAKG,EAAUf,IAA7DkB,EADiC,EACjCA,KAAMC,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,KAAMC,EADc,EACdA,SAAUC,EADI,EACJA,aAC/BC,GAA0B,IAAbF,GAA6C,qBAAjBC,EAC/CR,EAAQZ,KACN,kBAAC,IAAD,CAAIC,IAAKH,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAOe,EAAUf,IAAMuB,EAAa,IAAM,MAE3CJ,EACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrB,OAAQqB,KAGhBK,MAAMC,QAAQP,GACb,kBAAC,IAAD,CAAId,SAAUc,EAAKQ,KAAK,QAExB,kBAAC,IAAD,CAAItB,SAAUc,IAGlB,kBAAC,IAAD,CAAId,SAAUgB,MAMpB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAWT,gBAAiBA,IAC5B,kBAAC,IAAD,CAAOP,SAAUU","file":"static/js/9.c0fb3c7c.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Code } from '~components/document'\nimport { localize } from 'langutil'\nimport { withProps } from '~modules'\n\nfunction OneOf({ values }) {\n  let toRender = []\n  for (let i = 0; i < values.length; i++) {\n    toRender.push(<Code key={i} children={`'${values[i]}'`} />)\n    if (i < values.length - 1) { toRender.push(<Fragment key={`p${i}`}>, <br /></Fragment>) }\n  }\n  return localize({\n    keyword: 'ONE_OF_PARAMS',\n    transform: withProps({ params: toRender })\n  })\n}\n\nexport default OneOf\n","import React from 'react'\nimport { localize } from 'langutil'\nimport DocHeaderRow from '~components/doc-header-row'\n\nconst HeaderRow = ({ overrideVarName = localize('PARAMETERS') }) => {\n  return <DocHeaderRow data={[\n    overrideVarName,\n    localize('TYPE'),\n    localize('DESCRIPTION'),\n    // localize('DEFAULT_VALUE')\n  ]} />\n}\n\nexport default HeaderRow\n","import React from 'react'\nimport { Code, Table, TBody, Tr, Td } from '~components/document'\nimport OneOf from '~components/one-of'\nimport HeaderRow from './header-row'\n\nfunction ParamTable({ data = {}, overrideVarName }) {\n  let trArray = []\n  const dataIndex = Object.keys(data)\n\n  for (let i = 0; i < dataIndex.length; i++) {\n    const { type, oneOf, desc, optional, defaultValue } = data[dataIndex[i]]\n    const isOptional = optional === true || typeof defaultValue !== 'undefined'\n    trArray.push(\n      <Tr key={i}>\n        <Td>\n          <Code>{dataIndex[i] + (isOptional ? '?' : '')}</Code>\n        </Td>\n        {oneOf ?\n          <Td>\n            <OneOf values={oneOf} />\n          </Td>\n          :\n          (Array.isArray(type) ?\n            <Td children={type.join(', ')} />\n            :\n            <Td children={type} />\n          )\n        }\n        <Td children={desc} />\n        {/* <Td children={defaultValue} /> */}\n      </Tr>\n    )\n  }\n\n  return (\n    <Table>\n      <HeaderRow overrideVarName={overrideVarName} />\n      <TBody children={trArray} />\n    </Table>\n  )\n}\n\nexport default ParamTable\n"],"sourceRoot":""}