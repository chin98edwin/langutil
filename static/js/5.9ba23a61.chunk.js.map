{"version":3,"sources":["custom-hooks/useScrollToSection/index.js","custom-hooks/index.js","content/get-changelogs/v3.js","content/get-changelogs/v2.js","content/get-changelogs/v1.js","content/get-changelogs/index.js","screens/ChangelogScreen/index.js"],"names":["useScrollToSection","subId","useLayoutEffect","scrollToViewById","formatDomId","title","data","localize","keyword","transform","withProps","add","ad","p","pp","k","kk","loc","wl","locz","sd","href","STRINGS","dictionaryTemplateLink","children","target","rel","showL","lHide","lShow","langs","createElement","list","map","l","i","key","length","q","p2","init","setL","c","hL","hide","getChangelogs","require","default","withRouter","withLang","match","params","changelogs","toRender","version","push","once","id","majorVersionArray","j","logs","className","minorVersionArray"],"mappings":"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","file":"static/js/5.9ba23a61.chunk.js","sourcesContent":["import { useLayoutEffect } from 'react'\nimport { formatDomId, scrollToViewById } from '../../modules'\n\n/**\n * @description Scroll to a section within the document\n * @param {string} subId ID of the header DOM element\n */\nfunction useScrollToSection(subId) {\n  // Scroll to sub section if specified in URL\n  useLayoutEffect(() => {\n    if (typeof subId === 'string') { scrollToViewById(formatDomId(subId)) }\n  }, [subId])\n}\n\nexport default useScrollToSection\n","export { default as useScrollToSection } from './useScrollToSection'","import React from 'react'\nimport { localize } from 'langutil'\nimport { Code } from '../../components/document'\nimport { withProps } from '../../modules'\n\nexport default () => ({\n  title: 'v3',\n  data: [\n    {\n      title: '3.0.2',\n      data: [\n        localize('CHANGELOG_ADDED_BACK_LEGACY_COMPENSATION'),\n        localize('CHANGELOG_WARN_FOR_PARAMOBJ_WILL_BE_SHOWN'),\n        localize({\n          keyword: 'CHANGELOG_FIX_INCR_TYPE_REACT_ADD',\n          transform: withProps({ add: <Code>react-additions</Code> })\n        }),\n        localize('CHANGELOG_CODE_OPTIMIZATIONS'),\n      ]\n    },\n    {\n      title: '3.0.1',\n      data: [\n        localize({\n          keyword: 'CHANGELOG_FIXED_INCR_FN_NAME_AUTO_DETECT_NATIVE_ADD',\n          transform: withProps({ ad: <Code>AUTO_DETECT</Code> })\n        }),\n        localize({\n          keyword: 'CHANGELOG_FIXED_ESC_PHDRS',\n          transform: withProps({\n            p: <Code>'%p'</Code>, pp: <Code>'%%p'</Code>,\n            k: <Code>'{'{:key}'}'</Code>, kk: <Code>'{'{::key}'}'</Code>\n          })\n        }),\n        localize('CHANGELOG_WHEN_APPLY_CASING_ALLCAP_PRESERVED'),\n        localize('CHANGELOG_COMPLETE_REMOVAL_DEPRE_SET_MAR2020'),\n        localize('CHANGELOG_CODE_OPTIMIZATIONS'),\n      ]\n    },\n    {\n      title: '3.0.0',\n      data: [\n        localize({\n          keyword: 'CHANGELOG_LOC_FN_SIMPLIFIED',\n          transform: withProps({ loc: <Code>localize()</Code> })\n        }),\n        localize({\n          keyword: 'CHANGELOG_NEW_WITHLANG_HOC',\n          transform: withProps({\n            wl: <Code>withLang()</Code>,\n            locz: <Code>{'<Localizable />'}</Code>\n          })\n        }),\n        localize({\n          keyword: 'CHANGELOG_NEW_AUTO_DETECT_IMPLEMENTATION',\n          transform: withProps({ ad: <Code>AUTO_DETECT</Code> })\n        }),\n        localize('CHANGELOG_DICT_INSP_NOT_HAPPEN_DEFAULT'),\n        localize('CHANGELOG_STRUCT_DICT_AS_OBJ'),\n        localize({\n          keyword: 'CHANGELOG_NEW_SET_DICT_FN',\n          transform: withProps({ sd: <Code>setDictionary()</Code> })\n        }),\n      ]\n    }\n  ]\n})\n","import React from 'react'\nimport { STRINGS } from '../../constants'\nimport { Code } from '../../components/document'\n\nexport default () => ({\n  title: 'v2',\n  data: [\n    {\n      title: '2.4.0',\n      data: [\n        <><Code>{'<Localizable />'}</Code>  will update itself when <Code>setLanguage()</Code> is called.</>,\n        <>New <Code>allowEmpty</Code> parameter to suppress warnings about empty keywords.</>,\n        'Snooze dictionary inspection until a given date.',\n      ]\n    },\n    {\n      title: '2.3.3',\n      data: [\n        'Fixed issue where already-warned keywords still show up in group warnings.'\n      ]\n    },\n    {\n      title: '2.3.2',\n      data: [\n        'Grouped warnings for missing localizations.',\n        <>You can pass in custom components via the <Code>renderAs</Code> prop in React Native like how it can be done in React.</>\n      ]\n    },\n    {\n      title: '2.3.1',\n      data: [\n        'Hot fix for a problem in TypeScript.'\n      ]\n    },\n    {\n      title: '2.3.0',\n      data: [\n        'Internal optimization for better performance and debugging experience.',\n        <>Automatic language detection for React Native is no longer included in the core to avoid conflict with webpack config in some cases. It has been splitted out as a function and can be imported from <Code>'langutil/native-additions'</Code>.</>,\n        <>The <a href={STRINGS.dictionaryTemplateLink} children='repo' target='_blank' rel='noopener noreferrer' /> now includes template dictionaries, some of the most commonly used words are readily translated. More translations will be added over time.</>,\n        <>\n          Additions for React: <ul><li>New <Code>{'<Localizable />'}</Code> component that acts as a wrapper for HTML or React elements.</li></ul>\n        </>,\n        <>\n          Additions for React Native: <ul><li>New <Code>{'<Localizable />'}</Code> component that acts as a wrapper the <Code>{'<Text />'}</Code> tag.</li><li>Language detection for React Native has been splitted out from the core and moved into the additions folder.</li></ul>\n        </>,\n      ]\n    },\n    {\n      title: '2.2.4',\n      data: [\n        'Added docs about the Dictionary.',\n        <>Changed <Code>'react-native'</Code> from optional dependency to peer dependency.</>\n      ]\n    },\n    {\n      title: '2.2.3',\n      data: [\n        'Fixed a bug with auto detect.'\n      ]\n    },\n    {\n      title: '2.2.2',\n      data: [\n        'Fixed the issue where false warnings about insufficient parameters are shown. For sure!'\n      ]\n    },\n    {\n      title: '2.2.1',\n      data: [\n        'Emergency fix for a bug where auto detect in v2.2.0 fails for React Native apps.'\n      ]\n    },\n    {\n      title: '2.2.0',\n      data: [\n        <>In case the automatically detected language is not supported in the dictionary, langutil look for an alternative language from the dictionary. For example, if your dictionary contains localizations for <Code>'en'</Code>, but the automatically detected language is <Code>'en-us'</Code>, langutil will set the language to <Code>'en'</Code>.</>,\n        'Fixed an issue where false warnings about insufficient parameters are shown.',\n        <>New <Code>logs.focus()</Code> function allows to you see langutil logs in a specific block of code while hiding the rest, that is, only necessary if the logs were already hidden prior to that block.</>,\n        <>New <Code>isAuto()</Code> function to know whether autoDetection is set to true.</>\n      ]\n    },\n    {\n      title: '2.1.3',\n      data: [\n        <>Silenced the unneccessary warning messages when <Code>casing</Code> and <Code>transform</Code> parameters in <Code>localizeWith()</Code> are not defined as they are optional.</>,\n        'Auto language detection is now supported in React Native.',\n        'Documentations have been updated to reduce package size.',\n        'Fixed the bug where langutil will always launch in minified mode by default.'\n      ]\n    },\n    {\n      title: '2.1.2',\n      data: [\n        'Fixed an issue where you may encounter an error with a message like \"this.localize is not a function\".'\n      ]\n    },\n    {\n      title: '2.1.1',\n      data: [\n        'Fixed some documentation errors.',\n        <>Added new option <Code>'sentenceCase'</Code> for the <Code>casing</Code> parameter in <Code>localizeWith()</Code>.</>\n      ]\n    },\n    {\n      title: '2.1.0',\n      data: [\n        <>Added new method <Code>localizeWith()</Code> for more powerful localizing capabilities: Apply <b>casing styles</b> and <b>custom transformations</b> to the localized value! 🦄</>,\n        <>Added new method <Code>getDefinedLanguages()</Code> which allows you to access the list of languages defined in the dictionary during runtime.</>,\n        'You can now assign anything to your localized value, for instance, you might want to have a different logo image for each language if you have a tagline in your logo.',\n        'Fixed a critical bug where there production build fails if logs are shown.'\n      ]\n    },\n    {\n      title: '2.0.0',\n      data: [\n        'You can now define dictionaries by Keywords.',\n        <>There is a new <Code>createKey()</Code> method to help you with that.</>,\n        'Language list now follows ISO language codes but the old convention that langutil 1.x.x still works.',\n        <><Code>index.d.ts</Code> integration.</>,\n      ]\n    }\n  ]\n})\n","import React, { createElement, Fragment } from 'react'\nimport { localize } from 'langutil'\nimport { Code } from '../../components/document'\nimport { withProps } from '../../modules'\n\nexport default () => ({\n  title: 'v1',\n  data: [\n    {\n      title: '1.1.4',\n      data: [\n        localize('CHANGELOG_MINOR_PERF_FIXES')\n      ]\n    },\n    {\n      title: '1.1.3',\n      data: [\n        localize('CHANGELOG_FIXED_BUG_KEYWORD_REC_AS_INVALID')\n      ]\n    },\n    {\n      title: '1.1.2',\n      data: [\n        localize('CHANGELOG_PERF_OPT_FOR_PROD_MODE')\n      ]\n    },\n    {\n      title: '1.1.1',\n      data: [\n        localize('CHANGELOG_ADD_QUICKFIX_TO_DOC')\n      ]\n    },\n    {\n      title: '1.1.0',\n      data: [\n        localize({\n          keyword: 'CHANGELOG_SHOWLOG_WILL_BE_REPLACED_BY',\n          transform: withProps({\n            showL: <Code>showLogs()</Code>,\n            lHide: <Code>logs.hide()</Code>,\n            lShow: <Code>logs.show()</Code>\n          })\n        }),\n        localize({\n          keyword: 'CHANGELOG_ADDED_84_NEW_LANG',\n          transform: withProps({\n            langs: createElement(() => {\n              const list = ['akan', 'avestan', 'aymara', 'bihari', 'bislama', 'breton', 'burmese', 'bulgarian_old', 'chamorro', 'chechen', 'chuvash', 'cornish', 'cree', 'divehi', 'dzongka', 'ewe', 'faroese', 'fijian', 'fula', 'gaelic_scot', 'gaelic_manx', 'frisian_western', 'greenlandic', 'guarani', 'herero', 'hirimotu', 'ido', 'interlingua', 'interlingue', 'inuktitut', 'inupiak', 'kanuri', 'kashmiri', 'kikuyu', 'kinyarwanda', 'kirundi', 'komi', 'kongo', 'kwanyama', 'limburger', 'lingala', 'lugakatanga', 'luganda', 'manx', 'marshallese', 'moldavian', 'nauru', 'navajo', 'ndonga', 'ndebele_northern', 'norwegian_bokmal', 'norwegian_nynorsk', 'nuosu', 'occitan', 'ojibwe', 'oriya', 'oromo', 'ossetian', 'pali', 'quechua', 'romansh', 'sami', 'sango', 'sanskrit', 'serbian_croatian', 'setswana', 'siswati', 'southern_ndebele', 'swati', 'tagalog', 'tahitian', 'tatar', 'tibetan', 'tigrinya', 'tonga', 'tsonga', 'turkmen', 'twi', 'uyghur', 'venda', 'volapuk', 'wallon', 'wolof', 'zhuang']\n              const toRender = list.map((l, i) => {\n                return <Fragment key={i}><Code children={`'${l}'`} />{i < list.length - 1 ? ', ' : null}</Fragment>\n              })\n              return toRender\n            })\n          })\n        })\n      ]\n    },\n    {\n      title: '1.0.3',\n      data: [\n        localize({\n          keyword: 'CHANGELOG_FIXED_INCORRECT_ESCAPER_SWAP',\n          transform: withProps({\n            q: <Code>'%q'</Code>,\n            p: <Code>'%p'</Code>,\n            p2: <Code>'%%p'</Code>,\n          })\n        }),\n        localize('CHANGELOG_ADAPTED_SYNTAX_FOR_COMMONJS'),\n        localize({\n          keyword: 'CHANGELOG_ADDED_AUTO_SUGGESTIONS',\n          transform: withProps({ init: <Code>init()</Code>, setL: <Code>setLanguage()</Code> })\n        }),\n        localize({\n          keyword: 'CHANGELOG_ADDED_CHINESE_CODE',\n          transform: withProps({ c: <Code>'chinese'</Code> })\n        }),\n        localize('CHANGELOG_EXAMPLES_REMOVED_FROM_DOC'),\n        localize({\n          keyword: 'CHANGELOG_HIDELOGS_WILL_BE_DEPRECATED',\n          transform: withProps({ hL: <Code>hideLogs()</Code> })\n        })\n      ]\n    },\n    {\n      title: '1.0.2',\n      data: [\n        localize('CHANGELOG_ADD_UPDATE_HISTORY_TO_README'),\n        localize('CHANGELOG_LANG_TABLE_MADE_COMPACT'),\n      ]\n    },\n    {\n      title: '1.0.1',\n      data: [\n        localize({\n          keyword: 'CHANGELOG_ADDED_HIDELOGS',\n          transform: withProps({ hide: <Code>hideLogs()</Code> })\n        })\n      ]\n    },\n    {\n      title: '1.0.0',\n      data: [\n        localize('CHANGELOG_CREATION_OF_LANGUTIL'),\n      ]\n    }\n  ]\n})\n","const getChangelogs = () => {\n  return [\n    require('./v3').default(),\n    require('./v2').default(),\n    require('./v1').default(),\n  ]\n}\n\nexport default getChangelogs\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { withLang } from 'langutil/react-additions'\nimport { H1, H2, Ul, Li, SectionBreak } from '../../components/document'\nimport FadeIntoView from '../../components/fade-into-view'\nimport { useScrollToSection } from '../../custom-hooks'\nimport { formatDomId } from '../../modules'\nimport getChangelogs from '../../content/get-changelogs'\nimport './index.css'\n\nfunction ChangelogScreen({ match: { params: { subId } } }) {\n  useScrollToSection(subId)\n  const changelogs = getChangelogs()\n  let toRender = []\n  for (let i = 0; i < changelogs.length; i++) {\n    const { title: version, data } = changelogs[i]\n    toRender.push(\n      <FadeIntoView key={`h1-${i}`} once>\n        <H1 id={formatDomId(version)} children={version} />\n      </FadeIntoView>\n    )\n    let majorVersionArray = []\n    for (let j = 0; j < data.length; j++) {\n      const { title, data: logs } = data[j]\n      majorVersionArray.push(\n        <FadeIntoView key={`h2-${j}`} once>\n          <H2 id={formatDomId(title)} className='changelog-scn-h2' children={title} />\n        </FadeIntoView>\n      )\n      let minorVersionArray = []\n      for (let k = 0; k < logs.length; k++) {\n        minorVersionArray.push(\n          <FadeIntoView key={`li-${k}`} once>\n            <Li className='changelog-scn-li' children={logs[k]} />\n          </FadeIntoView>\n        )\n      }\n      majorVersionArray.push(\n        <FadeIntoView key={`ul-${j}`} once>\n          <Ul children={minorVersionArray} />\n        </FadeIntoView>\n      )\n      majorVersionArray.push(<br key={`br-${j}`} />)\n    }\n    toRender.push(majorVersionArray)\n    toRender.push(<SectionBreak key={`sb-${i}`} />)\n  }\n  return <div className='changelog-scn-container' children={toRender} />\n}\n\nexport default withRouter(withLang(ChangelogScreen))\n"],"sourceRoot":""}